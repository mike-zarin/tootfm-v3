const fs = require('fs');
const fetch = require('node-fetch');

async function refreshToken() {
  const data = JSON.parse(fs.readFileSync('./apps/web/data.json', 'utf-8'));
  const user = data.users.find(u => u.spotifyProfile?.refreshToken);
  
  if (!user) {
    console.log('‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å refresh token');
    return;
  }
  
  console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è:', user.email);
  
  const clientId = '68a7ea6587af43cc893cc0994a584eff';
  const clientSecret = 'cd2b848b64e743c784600947a13459f2';
  
  const response = await fetch('https://accounts.spotify.com/api/token', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded',
      'Authorization': 'Basic ' + Buffer.from(`${clientId}:${clientSecret}`).toString('base64')
    },
    body: new URLSearchParams({
      grant_type: 'refresh_token',
      refresh_token: user.spotifyProfile.refreshToken
    })
  });
  
  if (!response.ok) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', response.status);
    console.log(await response.text());
    return;
  }
  
  const tokenData = await response.json();
  console.log('‚úÖ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω!');
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –≤ data.json
  user.spotifyProfile.accessToken = tokenData.access_token;
  user.spotifyProfile.expiresAt = new Date(Date.now() + tokenData.expires_in * 1000).toISOString();
  
  // –ï—Å–ª–∏ –ø—Ä–∏—à–µ–ª –Ω–æ–≤—ã–π refresh token - –æ–±–Ω–æ–≤–ª—è–µ–º –∏ –µ–≥–æ
  if (tokenData.refresh_token) {
    user.spotifyProfile.refreshToken = tokenData.refresh_token;
    console.log('üîÑ Refresh token —Ç–æ–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω');
  }
  
  fs.writeFileSync('./apps/web/data.json', JSON.stringify(data, null, 2));
  console.log('üíæ –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ data.json');
  console.log('üìÖ –ò—Å—Ç–µ–∫–∞–µ—Ç:', user.spotifyProfile.expiresAt);
  
  // –°—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ —Ç–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç
  console.log('\nüß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω...');
  const testResponse = await fetch('https://api.spotify.com/v1/me', {
    headers: {
      'Authorization': `Bearer ${tokenData.access_token}`
    }
  });
  
  if (testResponse.ok) {
    const profile = await testResponse.json();
    console.log('‚úÖ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', profile.display_name || profile.id);
  } else {
    console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', testResponse.status);
  }
}

refreshToken().catch(console.error);
